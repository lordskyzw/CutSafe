//1. Tarimica Chiwara C21145989W
//2. TINAYEISHE CHIRINDA C21147680W
//3. Precious Makadho c21145681W
//4. Mashava Strive C21147540F
//5. Takudzwa Mukaro C21145793S


import android.Manifest;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

public class MainActivity extends AppCompatActivity {

    private static final int REQUEST_LOCATION_PERMISSION = 1;
    private Button distressButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        distressButton = findViewById(R.id.distress_button);
        distressButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
                    ActivityCompat.requestPermissions(MainActivity.this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION_PERMISSION);
                } else {
                    sendLocationToServer();
                    Toast.makeText(MainActivity.this, "Location sent to server", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    private void sendLocationToServer() {
        Location location = getLastKnownLocation();
        if (location != null) {
            try {
                // Create a new HTTP connection
                URL url = new URL(SERVER_URL);
                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setRequestMethod("POST");
                conn.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
                conn.setRequestProperty("Accept", "application/json");
                conn.setDoOutput(true);

                // Send the location data to the server
                DataOutputStream out = new DataOutputStream(conn.getOutputStream());
                out.writeBytes(String.format("{\"latitude\":%f,\"longitude\":%f}", location.getLatitude(), location.getLongitude()));
                out.flush();
                out.close();
                
                // Check the server response code
                int responseCode = conn.getResponseCode();
                if (responseCode != HttpURLConnection.HTTP_OK) {
                    Log.e(TAG, "Server returned HTTP error code " + responseCode);
                }
                
                // Close the connection
                conn.disconnect();
                
            } catch (IOException e) {
                Log.e(TAG, "Error sending location data to server", e);
            }
        } else {
            Log.e(TAG, "No location data available");
        }
    
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        if (requestCode == REQUEST_LOCATION_PERMISSION) {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                sendLocationToServer();
                Toast.makeText(this, "Location sent to server", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(this, "Location permission denied", Toast.LENGTH_SHORT).show();
            }
        }
    }
}
